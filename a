{
  "drink": {
    "modelProps": {
      "type": "String",
      "uppercase": false,
      "lowercase": false,
      "trim": true,
      "match": "/^[a-zA-Z]+$/",
      "enum": "['Coffee', 'Tea']",
      "validate": {
        "validator": "function(v) {\n        return /(\\d{2}) \\d{5}-\\d{4}/.test(v);\n      }",
        "message": "'{VALUE} is not a valid phone number!'"
      },
      "required": "[true, 'Why no drink?']",
      "default": "Coffee",
      "maxlength": "[100, 'The value exceeds the maximum allowed length ({MAXLENGTH})']",
      "minlength": "[5, 'The value is shorter than the minimum allowed length ({MINLENGTH})']",
      "index": true,
      "unique": false
    },
    "viewProps": {
      "name": "drink",
      "displayName": "Drink",
      "fieldType": "text",
      "pattern": "/(\\d{2}) \\d{5}-\\d{4}/",
      "message": "'This is not a valid phone number!'"
    }
  },
  "ammount": {
    "modelProps": {
      "type": "Number",
      "required": "[true, 'Why no drink?']",
      "default": "Coffee",
      "max": "[100, 'Too much']",
      "min": "[5, 'Too few']",
      "get": "v => Math.round(v)",
      "set": "v => Math.round(v)"
    },
    "viewProps": {
      "name": "ammount",
      "displayName": "Ammount",
      "fieldType": "slider",
      "min": "5",
      "max": "100",
      "sliderOptions": "md-vertical md-discrete",
      "required": true,
      "requiredMessage": "Required"
    }
  },
  "eat": {
    "modelProps": {
      "type": "[{ type: String, enum: ['eggs', 'bacon'] }]"
    },
    "viewProps": {
      "name": "eat",
      "displayName": "Eat",
      "fieldType": "checkbox",
      "disabled": "!vm.teste.ammount",
      "checkboxType": "multiple",
      "colSize": "25"
    }
  },
  "eat2": {
    "modelProps": {
      "type": "Boolean"
    },
    "viewProps": {
      "name": "eat2",
      "displayName": "Eat 2",
      "fieldType": "checkbox",
      "checkboxType": "simple"
    }
  },
  "eat3": {
    "modelProps": {
      "type": "Boolean"
    },
    "viewProps": {
      "name": "eat3",
      "displayName": "Eat 3",
      "fieldType": "switch"
    }
  },
  "date": {
    "modelProps": {
      "type": "Date",
      "default": "Date.now",
      "max": "new Date('October 13, 2017 11:13:00')",
      "min": "Date.now"
    },
    "viewProps": {
      "name": "date",
      "displayName": "Date",
      "fieldType": "date",
      "validMessage": "Invalid Date",
      "mindate": "Date.now",
      "maxdate": "new Date('October 13, 2017 11:13:00')",
      "required": true,
      "requiredMessage": "Required",
      "mindateMessage": "Date is too early!",
      "maxdateMessage": "Date is too late!",
      "datepickerOpts": "md-open-on-focus"
    }
  },
  "companion": {
    "modelProps": {
      "type": "[{ type: Schema.Types.ObjectId, ref: 'User', required: true }]"
    },
    "populate": {
      "path": "companion",
      "select": "displayName"
    },
    "viewProps": {
      "name": "companion",
      "displayName": "Companion",
      "fieldType": "select",
      "search": true,
      "multiple": true,
      "required": true,
      "objectIdDisplayName": "displayName"
    }
  },
  "companion2": {
    "modelProps": {
      "type": "Schema.Types.ObjectId",
      "ref": "'User'"
    },
    "populate": {
      "path": "companion2",
      "select": "displayName"
    },
    "viewProps": {
      "name": "companion2",
      "displayName": "Companion 2",
      "fieldType": "select",
      "search": false,
      "multiple": false,
      "async": true,
      "selectOptions": "md-no-underline",
      "objectIdDisplayName": "displayName"
    }
  },
  "companion3": {
    "modelProps": {
      "type": "[{ type: Schema.Types.ObjectId, ref: 'User', required: true }]"
    },
    "populate": {
      "path": "companion3",
      "select": "displayName"
    },
    "viewProps": {
      "name": "companion3",
      "displayName": "Companion 3",
      "fieldType": "gridModal",
      "search": true,
      "multiple": true,
      "async": true,
      "pagination": true
    }
  },
  "companion4": {
    "modelProps": {
      "type": "[{ type: String, enum: ['Teste 1', 'Teste 2'] }]"
    },
    "viewProps": {
      "name": "companion4",
      "displayName": "Companion 4",
      "fieldType": "select",
      "search": true,
      "multiple": true,
      "required": true,
      "requiredMessage": "Mandatory",
      "objectIdDisplayName": "displayName"
    }
  },
  "companions": {
    "modelProps": {
      "type": "String",
      "enum": "['Teste 1', 'Teste 2']"
    },
    "viewProps": {
      "name": "companions",
      "displayName": "Companions",
      "fieldType": "select",
      "search": false,
      "multiple": false,
      "required": true,
      "requiredMessage": "Mandatory",
      "objectIdDisplayName": "displayName"
    }
  },
  "repeat": {
    "modelProps": {
      "type": "Boolean",
      "required": true,
      "default": false
    },
    "viewProps": {
      "name": "repeat",
      "displayName": "Repeat Every Day",
      "fieldType": "switch"
    }
  },
  "chips": {
    "modelProps": {
      "type": "[{ type: String }]",
      "required": true
    },
    "viewProps": {
      "name": "chips",
      "displayName": "Chips",
      "fieldType": "chips",
      "required": true,
      "requiredMessage": "Required"
    }
  }
}